package com.liuzg.jswebextra.plugins.pay.configure;


import com.liuzg.jswebextra.plugins.pay.sdk.tencent.IWXPayDomain;
import com.liuzg.jswebextra.plugins.pay.sdk.tencent.WXPayConfig;
import com.liuzg.jswebextra.plugins.pay.sdk.tencent.WXPayDomainSimpleImpl;

import java.io.*;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

public class WXPayConfigImpl extends WXPayConfig {

    private byte[] certData;
    private static WXPayConfigImpl INSTANCE;
    private Map<String , String> configMap = new HashMap<>();

    private WXPayConfigImpl() throws Exception{


        Properties pps = new Properties();
        InputStream in = null;
        try {
            in = new BufferedInputStream(new FileInputStream("D://Idea/wxpay/jsweblibextra.web/web/WEB-INF/config/wxpayconfigure.properties"));
            pps.load(in);
            Enumeration en = pps.propertyNames(); //得到配置文件的名字
            while(en.hasMoreElements()) {
                String strKey = (String) en.nextElement();
                String strValue = pps.getProperty(strKey);
                configMap.put(strKey,strValue);
            }
            in.close();

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }


        String certPath = configMap.get("certpath")==null?"":configMap.get("certpath");
        File file = new File(certPath);
        InputStream certStream = new FileInputStream(file);
        this.certData = new byte[(int) file.length()];
        certStream.read(this.certData);
        certStream.close();
    }

    public static WXPayConfigImpl getInstance() throws Exception{
        if (INSTANCE == null) {
            synchronized (WXPayConfigImpl.class) {
                if (INSTANCE == null) {
                    INSTANCE = new WXPayConfigImpl();
                }
            }
        }
        return INSTANCE;
    }

    public String getAppID() {
        return configMap.get("appid")==null?"":configMap.get("appid");
    }

    public String getMchID() {
        return configMap.get("mch_id")==null?"":configMap.get("mch_id");
    }

    public String getKey() {
        return configMap.get("key")==null?"":configMap.get("key");
    }

    public InputStream getCertStream() {
        ByteArrayInputStream certBis;
        certBis = new ByteArrayInputStream(this.certData);
        return certBis;
    }


    public int getHttpConnectTimeoutMs() {
        return 2000;
    }

    public int getHttpReadTimeoutMs() {
        return 10000;
    }

    public IWXPayDomain getWXPayDomain() {
        return WXPayDomainSimpleImpl.instance();
    }

    public String getPrimaryDomain() {
        return "api.mch.weixin.qq.com";
    }

    public String getAlternateDomain() {
        return "api2.mch.weixin.qq.com";
    }

}
